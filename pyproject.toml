# https://setuptools.pypa.io/en/latest/userguide/quickstart.html
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
fail-under = 100
exclude = ["setup.py", "docs", "build", "examples"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 2
quiet = false
whitelist-regex = []
color = true

[tool.pytest.ini_options]
addopts = "-v --cov --cov-report term-missing"
testpaths = [
    "tests",
]

[tool.isort]
profile = "black"

[tool.ruff]
# See https://docs.astral.sh/ruff/rules/ for a list of rules.
# See https://docs.astral.sh/ruff/configuration/#using-pyprojecttoml for configuration documentation
select = ["E", "F", "I"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
namespaces = false

[project]
name = "nams"
version = "0.0.2"
# NOTE: move dependencies into this section if you need to distribute the project as a Python package.
requires-python = ">=3.10"
readme = "README.md"
dependencies = ["nxviz>=0.7.4,<0.8", "nams==0.0.2"]
classifiers = ["Private :: Do Not Upload"]

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64", "win-64", "linux-aarch64"]

[tool.pixi.pypi-dependencies]
nams = { path = ".", editable = true }

# NOTE: Core dependencies (needed for running the program) go here.
[tool.pixi.dependencies]
python = "3.11.*"
ffmpeg = ">=7.1.0,<8"
hiveplot = ">=0.1.8.4,<0.2"
jupyter = ">=1.1.1,<2"
jupyterlab = ">=4.3.4,<5"
matplotlib = ">=3.10.0,<4"
networkx = ">=3.4.2,<4"
numpy = ">=2.2.1,<3"
pandas = ">=2.2.3,<3"
pyjanitor = ">=0.30.0,<0.31"
python-louvain = ">=0.16,<0.17"
scipy = ">=1.15.1,<2"
seaborn = ">=0.13.2,<0.14"
tqdm = ">=4.67.1,<5"
pyprojroot = ">=0.3.0,<0.4"
markdown = "*"

# NOTE: Testing dependencies (not needed for running program) go here.
[tool.pixi.feature.tests.dependencies]
pytest = "*"
pytest-cov = "*"
hypothesis = "*"

# NOTE: Docs dependencies (needed for documentation and notebooks) go here.
[tool.pixi.feature.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"
mkdocs-material-extensions = "*"
pymdown-extensions = "*"
mknotebooks = "*"

[tool.pixi.feature.notebook.dependencies]
ipykernel = "*"
ipython = "<=8.22.0"
jupyter = "*"
pixi-kernel = "*"

[tool.pixi.feature.devtools.dependencies]
pre-commit = "*"

[tool.pixi.tasks]
jlab = "jupyter lab"

[tool.pixi.feature.tests.tasks]
test = "pytest"

[tool.pixi.feature.devtools.tasks]
lint = "pre-commit run --all-files"
commit = "git commit"

[tool.pixi.feature.docs.tasks]
build-docs = "mkdocs build"
serve-docs = "mkdocs serve"

[tool.pixi.feature.setup.tasks]
setup = "pre-commit autoupdate && pre-commit install --install-hooks"
update = "pre-commit autoupdate"

[tool.pixi.environments]
default = { features = ["tests", "devtools", "notebook", "setup"] }
docs = { features = ["docs"] }
tests = { features = ["tests", "setup"] }
